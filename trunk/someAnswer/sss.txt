

Struts框架中的ActionForm类(一)

Struts框架中的ActionForm类

1.校验数据

2.把本身的值对应显示在表单中的各个属性数据项目中

 

编写自定义的ActionForm组件类

1. 继承org.apache.struts.action.ActionForm类

2. 利用struts框架所提供的HTML类型的标签相结合可以实现对客户端的表单数据的良好封装和支持；并且在用户自定义的ActionForm组件类中的各种成员属性的名称和数据类型必须要和请求页面表单中的各个字段相对应，目的是使得Struts框架的系统程序能够完成客户请求数据的自动化获取。

左图包含用户名userName和密码userPassword的一个Struts的页面表单，右图为与该表单相对应的ActionForm组件类中的userName和userPassword成员属性，两者保持了一致的命名映射规则。

另外，在ActionForm组件类中必须为各个成员属性提供setter和getter的数据访问方法。

如果满足这种要求，Struts框架会自动将客户端的请求填充在相应的ActionForm组件类中的各个成员属性中，最终实现ActionForm组件类和表示层组件之间的数据映射，而不再需要像传统的Web表单提交后需要在后台的程序中采用代码request.getParameter(“参数名称”);的方式来获取数据。

3.

另外，在ActionForm组件类中必须为各个成员属性提供setter和getter的数据访问方法。

如果满足这种要求，Struts框架会自动将客户端的请求填充在相应的ActionForm组件类中的各个成员属性中，最终实现ActionForm组件类和表示层组件之间的数据映射，而不再需要像传统的Web表单提交后需要在后台的程序中采用代码request.getParameter(“参数名称”);的方式来获取数据。

3.

1.       重写validate和reset方法

public class UserLoginForm extends ActionForm{

         private String username;

         private String userPassword;

       public ActionErrors validate(ActionMapping mapping, HttpServletRequest request){

        ?       ActionErrors actionErrors = new ActionErrors();

                if(userName = = null || username = = “” || username.length() = = 0 ){

                       actionErrors.add(“userName”, new ActionMessage(“userInfo.userNameEmpty”));

                }

                else if(userPassword == null || userPassword ==”” || userPassword.legth() == 0){

             ?          actionErrors.add(“password”, new ActionMessage(“userInfo.userPassewordEmpty”));

                }

                return actionErrors;

         }

 

        public void reset(ActionMapping mapping, HttpServletRequest request){

                 this.userName = “”;

                 this.userPassword=””;

        }

 

         public void setUserName(String userName){

                 this.userName = username;

         }

 

         public String getUserName(){

                 return this.userName;

        }

 

        public void setUserPassword(String usrPassword){

                 this.userPassword = userPassword;

       }

 

       public String getUserPassword{

             return this.userPassword;

       }

4.Action组件类和ActionForm组件类之间的交互

 Public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response){

       UserLoginForm userLoginForm = (UserLoginForm)form;

       String userName = userLoginForm..getUserName();

      String userPassword = userLoginForm.getUserPassword();

}

  