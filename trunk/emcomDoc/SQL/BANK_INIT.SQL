

1.添加CP CS	,RELATION_PBCP_ID 需要注意区分,DMM需要实际确认,其他系统是DB
INSERT INTO JHF_COUNTERPARTY (COUNTERPARTY_ID,COUNTERPARTY_TYPE,COUNTERPARTY_SHORT_NAME,COUNTERPARTY_NAME,SWIFT_BIC_CD,	
 OPEN_BUY_CONSTRAINT,OPEN_SELL_CONSTRAINT,CLOSE_BUY_CONSTRAINT,CLOSE_SELL_CONSTRAINT,OPEN_TIME,CLOSE_TIME,RUNING_STATUS,	
 UPDATE_STAFF_ID,INPUT_STAFF_ID,ACTIVE_FLAG,INPUT_DATE,UPDATE_DATE,PB_SB_FLAG,RELATION_PBCP_ID) VALUES ('GKGOH',2,'GKGOH','Credit Suisse',null,0,0,0,0,'0600','0600',	
 1,'system','system',1,sysdate(),sysdate(),2,'GKGOH');	

2.添加对应的CP CurrencyPair


INSERT INTO JHF_COUNTERPARTY_CURRENCYPAIR(COUNTERPARTY_ID, CURRENCY_PAIR, 
    FEED_PRIORTIY, 
    HEDGE_PRIORTIY, 
    CAN_BESTHEDGE_FLAG,CAN_BESTFEED_FLAG,
    SPREAD_ALERT_VALUE, TRADABLE, OPEN_TIME, CLOSE_TIME, UPDATE_STAFF_ID, INPUT_STAFF_ID, ACTIVE_FLAG, INPUT_DATE, UPDATE_DATE) 
SELECT  'GKGOH', CURRENCY_PAIR, 
    (select max(FEED_PRIORTIY)+1 from JHF_COUNTERPARTY_CURRENCYPAIR T2 WHERE T1.CURRENCY_PAIR=T2.CURRENCY_PAIR), 
    (select max(HEDGE_PRIORTIY)+1 from JHF_COUNTERPARTY_CURRENCYPAIR T3 WHERE COUNTERPARTY_ID in (SELECT COUNTERPARTY_ID FROM JHF_COUNTERPARTY WHERE COUNTERPARTY_TYPE=2) AND  T1.CURRENCY_PAIR=T3.CURRENCY_PAIR),
    0,0,
    SPREAD_ALERT_VALUE, TRADABLE, OPEN_TIME, CLOSE_TIME, UPDATE_STAFF_ID, 
    INPUT_STAFF_ID, ACTIVE_FLAG, INPUT_DATE, UPDATE_DATE 
    FROM JHF_COUNTERPARTY_CURRENCYPAIR T1 WHERE COUNTERPARTY_ID = 'BC';
    
UPDATE JHF_COUNTERPARTY_CURRENCYPAIR SET HEDGE_PRIORTIY=HEDGE_PRIORTIY+1 WHERE COUNTERPARTY_ID in (SELECT COUNTERPARTY_ID FROM JHF_COUNTERPARTY WHERE COUNTERPARTY_TYPE=1);

INSERT INTO JHF_COUNTERPARTY_CURRENCYPAIR_SET (COUNTERPARTY_ID, CURRENCY_PAIR,DEFAULT_TYPE, 
    FEED_PRIORTIY, 
    HEDGE_PRIORTIY, 
    CAN_BESTHEDGE_FLAG,CAN_BESTFEED_FLAG,
    SPREAD_ALERT_VALUE, TRADABLE, UPDATE_STAFF_ID, INPUT_STAFF_ID, ACTIVE_FLAG, INPUT_DATE, UPDATE_DATE) 
SELECT  'GKGOH', CURRENCY_PAIR, DEFAULT_TYPE,
    (select max(FEED_PRIORTIY)+1 from JHF_COUNTERPARTY_CURRENCYPAIR_SET T2 WHERE T1.CURRENCY_PAIR=T2.CURRENCY_PAIR AND T1.DEFAULT_TYPE=T2.DEFAULT_TYPE), 
    (select max(HEDGE_PRIORTIY)+1 from JHF_COUNTERPARTY_CURRENCYPAIR_SET T3 WHERE COUNTERPARTY_ID in (SELECT COUNTERPARTY_ID FROM JHF_COUNTERPARTY WHERE COUNTERPARTY_TYPE=2) AND  T1.CURRENCY_PAIR=T3.CURRENCY_PAIR AND T1.DEFAULT_TYPE=T3.DEFAULT_TYPE),
    0,0,
    SPREAD_ALERT_VALUE, TRADABLE, UPDATE_STAFF_ID, 
    INPUT_STAFF_ID, ACTIVE_FLAG, INPUT_DATE, UPDATE_DATE 
    FROM JHF_COUNTERPARTY_CURRENCYPAIR_SET T1 WHERE COUNTERPARTY_ID = 'BC';
    
    
UPDATE JHF_COUNTERPARTY_CURRENCYPAIR_SET SET HEDGE_PRIORTIY=HEDGE_PRIORTIY+1 WHERE COUNTERPARTY_ID in (SELECT COUNTERPARTY_ID FROM JHF_COUNTERPARTY WHERE COUNTERPARTY_TYPE=1);

3.添加对应的Hedger Mode
INSERT INTO MAIN.JHF_HEDGER_MODE(COUNTERPARTY_ID, CURRENCY_PAIR, SOURCE_TYPE, TRADE_MODE, ACTIVE_FLAG, 
     INPUT_DATE, UPDATE_DATE, INPUT_STAFF_ID, UPDATE_STAFF_ID) 
SELECT 'GKGOH', CURRENCY_PAIR, SOURCE_TYPE, TRADE_MODE, ACTIVE_FLAG, INPUT_DATE, UPDATE_DATE, INPUT_STAFF_ID, UPDATE_STAFF_ID 
     FROM MAIN.JHF_HEDGER_MODE WHERE COUNTERPARTY_ID = 'BC';

4.初始化CP日足,MAIN和INFO都需要执行:
先执行验证sql，显示batchDate
SELECT FRONT_DATE FROM JHF_APPLICATION_DATE WHERE DATE_KEY = 'B';

INSERT INTO JHF_CP_DAILY_RATE_SUMMARY
SELECT 'GKGOH',CURRENCY_PAIR,RATE_DATE,OPEN_ASK,OPEN_BID,OPEN_PRICE_TIME,OPEN_MID,
HIGH_ASK,HIGH_BID,HIGH_PRICE_TIME,HIGH_MID,LOW_ASK,LOW_BID,LOW_PRICE_TIME,LOW_MID,CLOSE_ASK,
CLOSE_BID,CLOSE_PRICE_TIME,CLOSE_MID,ACTIVE_FLAG,INPUT_DATE,UPDATE_DATE,IS_ESTIMATE_CP
FROM JHF_CP_DAILY_RATE_SUMMARY WHERE COUNTERPARTY_ID='BC' AND RATE_DATE = (SELECT FRONT_DATE FROM JHF_APPLICATION_DATE WHERE DATE_KEY = 'B');

update JHF_CP_DAILY_RATE_SUMMARY set IS_ESTIMATE_CP='0' where COUNTERPARTY_ID='GKGOH' and IS_ESTIMATE_CP='1';
(注意执行这个SQL,否则,会引起Rollover的异常)

5.INFO库,创建JHF_CP_SPOT_RATE_GKGOH
CREATE TABLE `JHF_CP_SPOT_RATE_GKGOH` (
  `FRONT_DATE` varchar(8) NOT NULL,
  `CP_SPOT_RATE_ID` varchar(20) NOT NULL,
  `MESSAGE_TIME` timestamp NULL default NULL,
  `CURRENCY_PAIR` varchar(7) default NULL,
  `COUNTERPARTY_ID` varchar(6) default NULL,
  `JHF_PRICE_ID` varchar(60) default NULL,
  `ASK_0BD_PRICE_ID` varchar(128) default NULL,
  `ASK_0BD_TRADEABLE` decimal(1,0) default NULL,
  `ASK_0BD_RATE` decimal(10,6) default NULL,
  `ASK_0BD_VALUE_DATE` varchar(8) default NULL,
  `ASK_0BD_CONTRACT_LOWER_AMOUNT` decimal(15,2) default NULL,
  `ASK_0BD_CONTRACT_UPPER_AMOUNT` decimal(15,2) default NULL,
  `ASK_0BD_COUNTER_LOWER_AMOUNT` decimal(17,4) default NULL,
  `ASK_0BD_COUNTER_UPPER_AMOUNT` decimal(17,4) default NULL,
  `BID_0BD_PRICE_ID` varchar(128) default NULL,
  `BID_0BD_TRADEABLE` decimal(1,0) default NULL,
  `BID_0BD_RATE` decimal(10,6) default NULL,
  `BID_0BD_VALUE_DATE` varchar(8) default NULL,
  `BID_0BD_CONTRACT_LOWER_AMOUNT` decimal(15,2) default NULL,
  `BID_0BD_CONTRACT_UPPER_AMOUNT` decimal(15,2) default NULL,
  `BID_0BD_COUNTER_LOWER_AMOUNT` decimal(17,4) default NULL,
  `BID_0BD_COUNTER_UPPER_AMOUNT` decimal(17,4) default NULL,
  `ASK_1BD_PRICE_ID` varchar(128) default NULL,
  `ASK_1BD_TRADEABLE` decimal(1,0) default NULL,
  `ASK_1BD_RATE` decimal(10,6) default NULL,
  `ASK_1BD_VALUE_DATE` varchar(8) default NULL,
  `ASK_1BD_CONTRACT_LOWER_AMOUNT` decimal(15,2) default NULL,
  `ASK_1BD_CONTRACT_UPPER_AMOUNT` decimal(15,2) default NULL,
  `ASK_1BD_COUNTER_LOWER_AMOUNT` decimal(17,4) default NULL,
  `ASK_1BD_COUNTER_UPPER_AMOUNT` decimal(17,4) default NULL,
  `BID_1BD_PRICE_ID` varchar(128) default NULL,
  `BID_1BD_TRADEABLE` decimal(1,0) default NULL,
  `BID_1BD_RATE` decimal(10,6) default NULL,
  `BID_1BD_VALUE_DATE` varchar(8) default NULL,
  `BID_1BD_CONTRACT_LOWER_AMOUNT` decimal(15,2) default NULL,
  `BID_1BD_CONTRACT_UPPER_AMOUNT` decimal(15,2) default NULL,
  `BID_1BD_COUNTER_LOWER_AMOUNT` decimal(17,4) default NULL,
  `BID_1BD_COUNTER_UPPER_AMOUNT` decimal(17,4) default NULL,
  `ASK_2BD_PRICE_ID` varchar(128) default NULL,
  `ASK_2BD_TRADEABLE` decimal(1,0) default NULL,
  `ASK_2BD_RATE` decimal(10,6) default NULL,
  `ASK_2BD_VALUE_DATE` varchar(8) default NULL,
  `ASK_2BD_CONTRACT_LOWER_AMOUNT` decimal(15,2) default NULL,
  `ASK_2BD_CONTRACT_UPPER_AMOUNT` decimal(15,2) default NULL,
  `ASK_2BD_COUNTER_LOWER_AMOUNT` decimal(17,4) default NULL,
  `ASK_2BD_COUNTER_UPPER_AMOUNT` decimal(17,4) default NULL,
  `BID_2BD_PRICE_ID` varchar(128) default NULL,
  `BID_2BD_TRADEABLE` decimal(1,0) default NULL,
  `BID_2BD_RATE` decimal(10,6) default NULL,
  `BID_2BD_VALUE_DATE` varchar(8) default NULL,
  `BID_2BD_CONTRACT_LOWER_AMOUNT` decimal(15,2) default NULL,
  `BID_2BD_CONTRACT_UPPER_AMOUNT` decimal(15,2) default NULL,
  `BID_2BD_COUNTER_LOWER_AMOUNT` decimal(17,4) default NULL,
  `BID_2BD_COUNTER_UPPER_AMOUNT` decimal(17,4) default NULL,
  `ACTIVE_FLAG` decimal(1,0) default NULL,
  `INPUT_DATE` timestamp NULL default NULL,
  `UPDATE_DATE` timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
  PRIMARY KEY  (`FRONT_DATE`,`CP_SPOT_RATE_ID`),
  KEY `CPSPOT_02` (`CURRENCY_PAIR`,`MESSAGE_TIME`)
) ENGINE=MyISAM DEFAULT CHARSET=cp932;


6.增加主银行设置
 --//获取frontDate
frontDate = SELECT MAX(FRONT_DATE) FROM JHF_CP_CASH_BALANCE;

 --//根据获取到的frontDate,替换下面SQL中的${frontDate}.
INSERT INTO JHF_CP_CASH_BALANCE (FRONT_DATE,COUNTERPARTY_ID,CURRENCY_CODE,PRE_PREVIOUS_BALANCE,CASH_BALANCE_DAY
,PREVIOUS_BALANCE,CASH_BALANCE,ACTIVE_FLAG,INPUT_DATE,UPDATE_DATE,ESTIMATE_RATE)
SELECT FRONT_DATE,'GKGOH',CURRENCY_CODE,0,0,0,0,1,NOW(),NOW(),ESTIMATE_RATE
FROM JHF_CP_CASH_BALANCE WHERE FRONT_DATE=${frontDate} AND COUNTERPARTY_ID='SA';

INSERT INTO JHF_CP_DEPOSIT_STATUS (COUNTERPARTY_ID,TRADE_DEPOSIT,INPUT_STAFF_ID,UPDATE_STAFF_ID,ACTIVE_FLAG,INPUT_DATE,UPDATE_DATE)
VALUES ('GKGOH',0,'system','system',1,NOW(),NOW());






10.验证SQL，如果以下验证sql检索后有结果数据，那么验证执行失败
select CURRENCY_PAIR, count(FEED_PRIORTIY) c1, count(distinct FEED_PRIORTIY) c2, count(HEDGE_PRIORTIY) c3, count(distinct HEDGE_PRIORTIY) c4  
from JHF_COUNTERPARTY_CURRENCYPAIR  
group by CURRENCY_PAIR 
having c1 <> c2 or c3 <> c4; 
 
select CURRENCY_PAIR, DEFAULT_TYPE, count(FEED_PRIORTIY) c1, count(distinct FEED_PRIORTIY) c2, count(HEDGE_PRIORTIY) c3, count(distinct HEDGE_PRIORTIY) c4  
from JHF_COUNTERPARTY_CURRENCYPAIR_SET  
group by CURRENCY_PAIR, DEFAULT_TYPE 
having c1 <> c2 or c3 <> c4;  



11.jms-configuration.xml添加对应的Destination:
<destination name="topic/gwCounterPartyGKGOHRateTopic"><provider cluster="cluster1"/></destination>
<destination name="topic/CpGKGOHRate4TradeTopic"><provider cluster="cluster1"/></destination>
<destination name="topic/CpGKGOHRate4RateCacheTopic"><provider cluster="cluster1"/></destination>
<destination name="queue/gwGKGOHOrderRequestQueue"><provider cluster="cluster1"/></destination>
<destination name="queue/gwGKGOHTQRequestQueue"><provider cluster="cluster1"/></destination>

12.CpRateWriter-config.xml
	<CpRateWriterRule CounterPartyId="GKGOH"   JmsDestination="topic/gwCounterPartyGKGOHRateTopic"    Table="JHF_CP_SPOT_RATE_CS" />

13.Cp-Destination.xml
	<GKGOH gwOrderRequestQueue="queue/gwGKGOHOrderRequestQueue"
		gwTQRequestQueue="queue/gwGKGOHTQRequestQueue"
		gwCounterPartyRateTopic="topic/gwCounterPartyGKGOHRateTopic"
		CpRate4RateCacheTopic="topic/CpGKGOHRate4RateCacheTopic"
		CpRate4TradeTopic="topic/CpGKGOHRate4TradeTopic" />




stunnel.conf

client=yes
socket=a:TCP_NODELAY=1
socket=r:TCP_NODELAY=1
output=.\stunnel.log
[cxfix]
accept=127.0.0.1:5000
connect=204.16.181.205:443




