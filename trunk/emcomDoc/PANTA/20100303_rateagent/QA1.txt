	




1.RateAgent收到RateManger背离检查通过的CP Rate

2.与这个CP的上一个非Pending Rate(也就是NormalRate)进行Compare,如果比较结果是背离超过10pips(可设定),则执行3
		@2==================>当第一条汇率到达rateagent的时候，normal rate cache中为空 ，


3.并且其他的所有CP中,至少存在一个CP的NormalRate的FeedTime在5s内,则执行4

4.并且跟5s内的其他CP的最新Rate进行Compare,如果不存在小于或者等于3pips(可设定)内的差异,则执行5

5.由于2,3,4条件都成立,所以,此Rate为Pending Rate

6.只要2,3,4中有1个条件不成立,则该<<<Rate>>>是NormalRate

7.把其他CP的原本处于Pending的Rate并且跟当前这个Rate Compare结果是3pips内的Rate,按照NormalRate进行处理

===============> 7.里面的 ‘这个Rate’，是否是6中的<<<Rate>>>？
===============> 7.‘3pips内的Rate,按照NormalRate进行处理’，将pending变为normal的这些汇率，put 到 bestfeed cache中 ，

8.如果RateAgent在5s内,没有收到其他CP的Rate,则把当前处于Pending的各CP的Rate,全部变成NormalRate

===============> 8.单独做 timerTask 来检查‘背离检查用的cache’（背离检查用的cache  缓存所有agent接收到得消息）
                   把pending 变成normal 的汇率 put到 bestfeed cache 中，并在pending cache中删除。
                   ！！！ 这个检查不发送汇率

9.如果以上过程中,有新的NormalRate产生的话,则执行BestFeed计算等后续的操作
===============>9.产生多个normal rate只进行一次bestfeed，用哪个 rate 进行后续的BestFeed计算 ？

